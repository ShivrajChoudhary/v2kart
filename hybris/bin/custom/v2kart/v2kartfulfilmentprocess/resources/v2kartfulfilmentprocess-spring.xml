<?xml version="1.0" encoding="UTF-8"?>
<!--
    [y] hybris Platform

    Copyright (c) 2000-2014 hybris AG
    All rights reserved.

    This software is the confidential and proprietary information of hybris
    ("Confidential Information"). You shall not disclose such Confidential
    Information and shall use it only in accordance with the terms of the
    license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd"
    profile="v2kart">

    <!-- Listeners -->

    <bean id="pickupConfirmationEventListener" class="in.com.v2kart.fulfilmentprocess.listeners.PickupConfirmationEventListener"
        parent="abstractEventListener">
        <property name="businessProcessService" ref="businessProcessService" />
    </bean>

    <!-- Process Adapters -->

    <alias name="mockProcess2WarehouseAdapter" alias="process2WarehouseAdapter" />
    <bean id="mockProcess2WarehouseAdapter" class="in.com.v2kart.fulfilmentprocess.warehouse.MockProcess2WarehouseAdapter">
        <property name="modelService" ref="modelService" />
        <property name="warehouse2ProcessAdapter" ref="warehouse2ProcessAdapter" />
        <property name="timeService" ref="timeService" />
    </bean>

    <alias name="defaultWarehouse2ProcessAdapter" alias="warehouse2ProcessAdapter" />
    <bean id="defaultWarehouse2ProcessAdapter" class="in.com.v2kart.fulfilmentprocess.warehouse.DefaultWarehouse2ProcessAdapter">
        <property name="modelService" ref="modelService" />
        <property name="statusMap">
            <map key-type="de.hybris.platform.warehouse.WarehouseConsignmentStatus" value-type="de.hybris.platform.commerceservices.enums.WarehouseConsignmentState">
                <entry key="CANCEL" value="CANCEL" />
                <entry key="COMPLETE" value="COMPLETE" />
                <entry key="PARTIAL" value="PARTIAL" />
            </map>
        </property>
        <property name="businessProcessService" ref="businessProcessService" />
    </bean>

    <!-- Process Definitions -->

    <bean id="orderProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
        <property name="resource" value="classpath:/v2kartfulfilmentprocess/process/order-process.xml" />
    </bean>
    
     <bean id="orderProcessManualDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
        <property name="resource" value="classpath:/v2kartfulfilmentprocess/process/order-process-manual.xml" />
    </bean>

    <bean id="consignmentProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
        <property name="resource" value="classpath:/v2kartfulfilmentprocess/process/consignment-process.xml" />
    </bean>

    <!-- Process Actions -->

    <import resource="/v2kartfulfilmentprocess/process/order-process-spring.xml" />
    <import resource="/v2kartfulfilmentprocess/process/consignment-process-spring.xml" />


    <!-- Order Check Service -->
    <!-- Performs some basic validation for the order as part of the first stage of the process. -->

    <alias name="defaultCheckOrderService" alias="checkOrderService" />
    <bean id="defaultCheckOrderService" class="in.com.v2kart.fulfilmentprocess.impl.DefaultCheckOrderService" />

    <!-- Order Splitting -->
    <alias name="v2kartfulfilmentprocessOrderSplittingService" alias="orderSplittingService" />
    <bean id="v2kartfulfilmentprocessOrderSplittingService" parent="defaultOrderSplittingService">
        <property name="strategiesList">
            <list>
                <ref bean="splitToSingleConsignment"/>
            </list>
        </property>
    </bean>

    <!-- Split Strategies -->

    <alias name="defaultSplitByPoS" alias="splitByPoS" />
    <bean id="defaultSplitByPoS" class="in.com.v2kart.fulfilmentprocess.strategy.impl.SplitByPoS" />

    <alias name="defaultSplitByEntryDeliveryAddress" alias="splitByEntryDeliveryAddress" />
    <bean id="defaultSplitByEntryDeliveryAddress" class="in.com.v2kart.fulfilmentprocess.strategy.impl.SplitByEntryDeliveryAddress" />

    <alias name="defaultSplitByDeliveryMode" alias="splitByDeliveryMode" />
    <bean id="defaultSplitByDeliveryMode" class="in.com.v2kart.fulfilmentprocess.strategy.impl.SplitByDeliveryMode">
        <property name="pickupDeliveryModeDao" ref="pickupDeliveryModeDao" />
    </bean>

    <alias name="defaultSplitByAvailableCount" alias="splitByAvailableCount" />
    <bean id="defaultSplitByAvailableCount" class="in.com.v2kart.fulfilmentprocess.strategy.impl.SplitByAvailableCount">
        <property name="commerceStockService" ref="commerceStockService" />
    </bean>

    <alias name="defaultSplitByWarehouse" alias="splitByWarehouse" />
    <bean id="defaultSplitByWarehouse" class="in.com.v2kart.fulfilmentprocess.strategy.impl.SplitByWarehouse" />

    <!-- Jobs -->

    <bean id="cleanUpFraudOrderJob" class="in.com.v2kart.fulfilmentprocess.jobs.CleanUpFraudOrderJob">
        <property name="modelService" ref="modelService" />
        <property name="flexibleSearchService" ref="flexibleSearchService" />
        <property name="businessProcessService" ref="businessProcessService" />
        <property name="sessionService" ref="sessionService" />
    </bean>
    
    <!--  @Since 1.2 -->
    
    <bean id="storeCreditRequestIdGenerator" class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator">
        <property name="key" value="${keygen.storecredit.code.name}"/>
        <property name="digits" value="${keygen.storecredit.code.digits}"/>
        <property name="start" value="${keygen.storecredit.code.start}"/>
        <property name="numeric" value="${keygen.storecredit.code.numeric}"/>
        <property name="template" value="${keygen.storecredit.code.template}"/>
    </bean>
    
     <bean id="v2WalletCreditDao" class="in.com.v2kart.fulfilmentprocess.dao.impl.V2WalletCreditDaoImpl">
        <property name="flexibleSearchService" ref="defaultFlexibleSearchService" />
        <property name="modelService" ref="defaultModelService" />
        <property name="keyGenerator" ref="storeCreditRequestIdGenerator"/>
    </bean>
    
     <bean id="storeCreditService" class="in.com.v2kart.fulfilmentprocess.services.impl.V2StoreCreditServiceImpl">
        <property name="modelService" ref="defaultModelService" />
        <property name="v2WalletCreditDao" ref="v2WalletCreditDao" />
        <property name="userService" ref="userService" />
    </bean>
    
    <!--
    <bean id="immediateCancelRequestExecutor"
          class="de.hybris.platform.ordercancel.impl.executors.ImmediateCancelRequestExecutor"
          scope="prototype">
        <property name="modelService" ref="modelService"/>
        <property name="orderCancelRecordsHandler" ref="orderCancelRecordsHandler"/>
        <property name="completeCancelStatusChangeStrategy" ref="setCancellledStrategy"/>
        <property name="paymentServiceAdapter" ref="orderCancelPaymentServiceAdapter"/>
    </bean>
    -->
    
    <bean id="v2SetPartialCancellledStrategy" class="in.com.v2kart.fulfilmentprocess.strategy.impl.V2SetPartialCancellledStrategy"
        scope="tenant">
        <property name="modelService" ref="modelService" />
    </bean>
    
</beans>
